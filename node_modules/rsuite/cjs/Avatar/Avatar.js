'use client';
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard");
exports.__esModule = true;
exports.default = void 0;
var _taggedTemplateLiteralLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/taggedTemplateLiteralLoose"));
var _extends3 = _interopRequireDefault(require("@babel/runtime/helpers/extends"));
var _objectWithoutPropertiesLoose2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutPropertiesLoose"));
var _react = _interopRequireWildcard(require("react"));
var _propTypes = _interopRequireDefault(require("prop-types"));
var _utils = require("../utils");
var _AvatarGroup = require("../AvatarGroup/AvatarGroup");
var _propTypes2 = require("../internals/propTypes");
var _AvatarIcon = _interopRequireDefault(require("./AvatarIcon"));
var _useImage2 = _interopRequireDefault(require("./useImage"));
var _templateObject, _templateObject2;
/**
 * The Avatar component is used to represent user or brand.
 * @see https://rsuitejs.com/components/avatar
 */
var Avatar = /*#__PURE__*/_react.default.forwardRef(function (props, ref) {
  var _extends2;
  var _useContext = (0, _react.useContext)(_AvatarGroup.AvatarGroupContext),
    groupSize = _useContext.size,
    spacing = _useContext.spacing;
  var _props$as = props.as,
    Component = _props$as === void 0 ? 'div' : _props$as,
    bordered = props.bordered,
    alt = props.alt,
    className = props.className,
    children = props.children,
    circle = props.circle,
    color = props.color,
    _props$classPrefix = props.classPrefix,
    classPrefix = _props$classPrefix === void 0 ? 'avatar' : _props$classPrefix,
    _props$size = props.size,
    size = _props$size === void 0 ? groupSize : _props$size,
    src = props.src,
    srcSet = props.srcSet,
    sizes = props.sizes,
    style = props.style,
    imgProps = props.imgProps,
    onError = props.onError,
    rest = (0, _objectWithoutPropertiesLoose2.default)(props, ["as", "bordered", "alt", "className", "children", "circle", "color", "classPrefix", "size", "src", "srcSet", "sizes", "style", "imgProps", "onError"]);
  var _useClassNames = (0, _utils.useClassNames)(classPrefix),
    withClassPrefix = _useClassNames.withClassPrefix,
    prefix = _useClassNames.prefix,
    merge = _useClassNames.merge;
  var classes = merge(className, withClassPrefix(size, color, {
    circle: circle,
    bordered: bordered
  }));
  var imageProps = (0, _extends3.default)({}, imgProps, {
    alt: alt,
    src: src,
    srcSet: srcSet,
    sizes: sizes
  });
  var _useImage = (0, _useImage2.default)((0, _extends3.default)({}, imageProps, {
      onError: onError
    })),
    loaded = _useImage.loaded;
  var _useCustom = (0, _utils.useCustom)('Avatar'),
    rtl = _useCustom.rtl;
  var altComponent = (0, _react.useMemo)(function () {
    if (alt) {
      return /*#__PURE__*/_react.default.createElement("span", {
        role: "img",
        "aria-label": alt
      }, alt);
    }
    return null;
  }, [alt]);
  var placeholder = children || altComponent || /*#__PURE__*/_react.default.createElement(_AvatarIcon.default, {
    className: prefix(_templateObject || (_templateObject = (0, _taggedTemplateLiteralLoose2.default)(["icon"])))
  });
  var image = loaded ? /*#__PURE__*/_react.default.createElement("img", (0, _extends3.default)({}, imageProps, {
    className: prefix(_templateObject2 || (_templateObject2 = (0, _taggedTemplateLiteralLoose2.default)(["image"])))
  })) : placeholder;
  var margin = rtl ? 'marginLeft' : 'marginRight';
  var insertStyles = (0, _utils.isIE)() && spacing ? (0, _extends3.default)((_extends2 = {}, _extends2[margin] = spacing, _extends2), style) : style;
  return /*#__PURE__*/_react.default.createElement(Component, (0, _extends3.default)({}, rest, {
    ref: ref,
    className: classes,
    style: insertStyles
  }), src ? image : placeholder);
});
Avatar.displayName = 'Avatar';
Avatar.propTypes = {
  as: _propTypes.default.elementType,
  classPrefix: _propTypes.default.string,
  className: _propTypes.default.string,
  children: _propTypes.default.node,
  size: (0, _propTypes2.oneOf)(['xxl', 'xl', 'lg', 'md', 'sm', 'xs']),
  src: _propTypes.default.string,
  sizes: _propTypes.default.string,
  srcSet: _propTypes.default.string,
  imgProps: _propTypes.default.object,
  circle: _propTypes.default.bool,
  alt: _propTypes.default.string
};
var _default = Avatar;
exports.default = _default;